#!/bin/bash

# # # # # # # # # # # # # # # # # # # # # # # # #
# ctop - PBS Pro dashboard & resource monitor   #
#                                               #
# by Kevin Guay                                 #
# # # # # # # # # # # # # # # # # # # # # # # # #

RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color
STATUS_COLOR=$NC

human_print(){
while read B dummy; do
  [[ $B == *kb ]] && b=${B::-2} && echo $(( $b/1024/1024 )) && break
  [[ $B == *mb ]] && b=${B::-2} && echo $(( $b/1024 )) && break
  [[ $B == *gb ]] && b=${B::-2} && echo $(( $b )) && break
  [[ $B == *tb ]] && b=${B::-2} && echo $(( $b*1024 )) && break
done
}

echo -e ${BLUE}REQUESTED RESOURCES BY NODE

# get list of nodes
nodes=`pbsnodes -av | grep "^[^ ]"`
arr=( $nodes )
arr=($(for l in ${arr[@]}; do echo $l; done | sort))
for node in "${arr[@]}"
do

  cpu_used=`pbsnodes -v $node|grep resources_assigned.ncpus|tr -d '[:space:]'`
  cpu_used=${cpu_used##*=}
  cpu_avail=`pbsnodes -v $node|grep resources_available.ncpus|tr -d '[:space:]'`
  cpu_avail=${cpu_avail##*=}
  mem_used=`pbsnodes -v $node|grep resources_assigned.mem|tr -d '[:space:]'`
  mem_used=${mem_used##*=}
  mem_used=`echo $mem_used | human_print`
  mem_avail=`pbsnodes -v $node|grep resources_available.mem|tr -d '[:space:]'`
  mem_avail=${mem_avail##*=}
  mem_avail=`echo $mem_avail | human_print`

  # skip iteration if c1 or c2
  if [ $cpu_avail -lt 1 ]; then
    continue
  fi

  echo
  echo -e "${BLUE}$node"

  # progress bars (cpu)
  cpu_bar=""
  for i in $(seq 1 $(( $cpu_used*100/$cpu_avail )) )
  do
    cpu_bar+="#"
  done
  for i in $(seq 1 $(( 100-($cpu_used*100/$cpu_avail) )) )
  do
    cpu_bar+="."
  done
  cpu_bar+=\($(( $cpu_used*100/$cpu_avail ))%\)
  if [ $(( $cpu_used*100/$cpu_avail )) -le 10 ]
  then
    cpu_bar+="."
  fi

  # progress bars (mem)
  mem_bar=""
  for i in $(seq 1 $(( $mem_used*100/$mem_avail )) )
  do
    mem_bar+="#"
  done
  for i in $(seq 1 $(( 100-($mem_used*100/$mem_avail) )) )
  do
    mem_bar+="."
  done
  mem_bar+=\($(( $mem_used*100/$mem_avail ))%
  if [ $(( $mem_used*100/$mem_avail )) -le 10 ]
  then
    mem_bar+=")."
  else
    mem_bar+=")"
  fi

  if [ $mem_used -gt 0 ]; then
    STATUS_COLOR=$GREEN
  else
    STATUS_COLOR=$NC
  fi

  printf "${STATUS_COLOR}%*s\r${YELLOW}%s${NC}\n" "$(tput cols)" $cpu_bar "    CPU: "$cpu_used"/"$cpu_avail
  printf "${STATUS_COLOR}%*s\r${YELLOW}%s${NC}\n" "$(tput cols)" $mem_bar "    MEM: "$mem_used"/"$mem_avail"gb"
done
